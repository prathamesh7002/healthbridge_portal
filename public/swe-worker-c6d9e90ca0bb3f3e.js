(()=>{"use strict";self.onmessage=async e=>{switch(e.data.type){case"__START_URL_CACHE__":{let t=e.data.url,a=await fetch(t);if(!a.redirected){return(await caches.open("start-url")).put(t,a)}return Promise.resolve()}case"__FRONTEND_NAV_CACHE__":{var t;let a=e.data.url,s=await caches.open("pages");if(!!(await s.match(a,{ignoreSearch:!0})))return;let r=await fetch(a);if(!r.ok)return;if(s.put(a,r.clone()),e.data.shouldCacheAggressively&&(null===(t=r.headers.get("Content-Type"))||void 0===t?void 0:t.includes("text/html")))try{let e=await r.text(),t=[],a=await caches.open("static-style-assets"),s=await caches.open("next-static-js-assets"),c=await caches.open("static-js-assets");for(let[r,i]of e.matchAll(/<link.*?href=['"](.*?)['"].*?>/g))/rel=['"]stylesheet['"]/.test(r)&&t.push(a.match(i).then(e=>e?Promise.resolve():a.add(i)));for(let[,r]of e.matchAll(/<script.*?src=['"](.*?)['"].*?>/g)){let e=/\/_next\/static.+\.js$/i.test(r)?s:c;t.push(e.match(r).then(t=>t?Promise.resolve():e.add(r)))}return await Promise.all(t)}catch(e){}return Promise.resolve()}default:return Promise.resolve()}}})();